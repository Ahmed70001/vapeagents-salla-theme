{# Product Card Component #}
{# 
    Usage: {% include 'partials/product-card.twig' with {product: product, show_quick_view: true} %}
    
    Parameters:
    - product: Product object
    - show_quick_view: Boolean (optional, default: false)
    - card_size: String (optional: 'small', 'medium', 'large', default: 'medium')
#}

{% set card_size = card_size | default('medium') %}
{% set show_quick_view = show_quick_view | default(false) %}

<div class="product-card product-card--{{ card_size }}" data-product-id="{{ product.id }}">
    <!-- Product Image -->
    <div class="product-card__image-container">
        <a href="{{ product.url }}" class="product-card__image-link" aria-label="عرض {{ product.name }}">
            <img 
                src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 300 300'%3E%3Crect fill='%23f0f0f0' width='300' height='300'/%3E%3C/svg%3E"
                data-src="{{ product.image.url | default('images/placeholder-product.jpg' | asset) }}"
                alt="{{ product.name }}"
                class="product-card__image lazy"
                width="300"
                height="300"
                loading="lazy"
            >
            
            <!-- Product Badges -->
            <div class="product-card__badges">
                {% if product.is_new %}
                    <span class="product-badge product-badge--new">جديد</span>
                {% endif %}
                
                {% if product.has_discount %}
                    <span class="product-badge product-badge--sale">
                        خصم {{ product.discount_percentage }}%
                    </span>
                {% endif %}
                
                {% if product.is_out_of_stock %}
                    <span class="product-badge product-badge--out-of-stock">نفذ المخزون</span>
                {% endif %}
            </div>
            
            <!-- Quick Actions Overlay -->
            <div class="product-card__overlay">
                {% if show_quick_view %}
                    <button 
                        class="product-card__quick-view"
                        onclick="openQuickView({{ product.id }})"
                        aria-label="عرض سريع لـ {{ product.name }}"
                    >
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                            <circle cx="12" cy="12" r="3"></circle>
                        </svg>
                        عرض سريع
                    </button>
                {% endif %}
                
                <button 
                    class="product-card__wishlist {{ product.is_in_wishlist ? 'active' : '' }}"
                    onclick="toggleWishlist({{ product.id }})"
                    aria-label="{{ product.is_in_wishlist ? 'إزالة من المفضلة' : 'إضافة للمفضلة' }}"
                >
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                    </svg>
                </button>
            </div>
        </a>
    </div>
    
    <!-- Product Info -->
    <div class="product-card__content">
        <!-- Brand -->
        {% if product.brand %}
            <div class="product-card__brand">
                <a href="{{ product.brand.url }}" class="brand-link">{{ product.brand.name }}</a>
            </div>
        {% endif %}
        
        <!-- Product Name -->
        <h3 class="product-card__title">
            <a href="{{ product.url }}" class="product-card__title-link">
                {{ product.name }}
            </a>
        </h3>
        
        <!-- Product Rating -->
        {% if product.rating %}
            <div class="product-card__rating">
                <div class="rating-stars" aria-label="تقييم {{ product.rating }} من 5">
                    {% for i in 1..5 %}
                        <span class="star {{ i <= product.rating ? 'filled' : '' }}">★</span>
                    {% endfor %}
                </div>
                <span class="rating-count">({{ product.reviews_count }})</span>
            </div>
        {% endif %}
        
        <!-- Product Price -->
        <div class="product-card__price">
            {% if product.has_discount %}
                <span class="price-original">{{ product.original_price }} ر.س</span>
                <span class="price-current">{{ product.price }} ر.س</span>
            {% else %}
                <span class="price-current">{{ product.price }} ر.س</span>
            {% endif %}
        </div>
        
        <!-- Product Variants (if any) -->
        {% if product.variants and product.variants|length > 1 %}
            <div class="product-card__variants">
                {% for variant in product.variants|slice(0, 4) %}
                    <button 
                        class="variant-option {{ variant.id == product.selected_variant_id ? 'active' : '' }}"
                        onclick="selectVariant({{ product.id }}, {{ variant.id }})"
                        title="{{ variant.name }}"
                        {% if variant.is_out_of_stock %}disabled{% endif %}
                    >
                        {% if variant.color %}
                            <span class="variant-color" style="background-color: {{ variant.color }}"></span>
                        {% else %}
                            {{ variant.name }}
                        {% endif %}
                    </button>
                {% endfor %}
                
                {% if product.variants|length > 4 %}
                    <span class="variants-more">+{{ product.variants|length - 4 }}</span>
                {% endif %}
            </div>
        {% endif %}
        
        <!-- Add to Cart Button -->
        <div class="product-card__actions">
            {% if product.is_out_of_stock %}
                <button class="btn btn-disabled" disabled>
                    نفذ المخزون
                </button>
            {% else %}
                <button 
                    class="btn btn-primary add-to-cart-btn"
                    onclick="addToCart({{ product.id }})"
                    data-product-id="{{ product.id }}"
                >
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="9" cy="21" r="1"></circle>
                        <circle cx="20" cy="21" r="1"></circle>
                        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                    </svg>
                    إضافة للسلة
                </button>
            {% endif %}
        </div>
    </div>
</div>

<style>
.product-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: all 0.3s ease;
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.product-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

/* Card Sizes */
.product-card--small {
    max-width: 200px;
}

.product-card--medium {
    max-width: 280px;
}

.product-card--large {
    max-width: 350px;
}

/* Image Container */
.product-card__image-container {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    background: #f8f9fa;
}

.product-card__image-link {
    display: block;
    width: 100%;
    height: 100%;
}

.product-card__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-card:hover .product-card__image {
    transform: scale(1.05);
}

/* Badges */
.product-card__badges {
    position: absolute;
    top: 12px;
    right: 12px;
    display: flex;
    flex-direction: column;
    gap: 6px;
    z-index: 2;
}

.product-badge {
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 11px;
    font-weight: 600;
    text-align: center;
    color: white;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.product-badge--new {
    background: linear-gradient(45deg, #4CAF50, #45a049);
}

.product-badge--sale {
    background: linear-gradient(45deg, #ff6b6b, #ff5252);
}

.product-badge--out-of-stock {
    background: linear-gradient(45deg, #757575, #616161);
}

/* Overlay */
.product-card__overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 3;
}

.product-card:hover .product-card__overlay {
    opacity: 1;
}

.product-card__quick-view {
    background: white;
    color: #333;
    border: none;
    padding: 8px 16px;
    border-radius: 20px;
    cursor: pointer;
    font-size: 12px;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 6px;
    transition: all 0.3s ease;
}

.product-card__quick-view:hover {
    background: #f0f0f0;
    transform: scale(1.05);
}

.product-card__wishlist {
    background: white;
    color: #333;
    border: none;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.product-card__wishlist:hover {
    background: #ff6b6b;
    color: white;
    transform: scale(1.1);
}

.product-card__wishlist.active {
    background: #ff6b6b;
    color: white;
}

.product-card__wishlist.active svg {
    fill: currentColor;
}

/* Content */
.product-card__content {
    padding: 16px;
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.product-card__brand {
    margin-bottom: 4px;
}

.brand-link {
    color: #666;
    text-decoration: none;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: color 0.3s ease;
}

.brand-link:hover {
    color: #ff6b6b;
}

.product-card__title {
    margin: 0;
    font-size: 14px;
    font-weight: 600;
    line-height: 1.4;
    flex: 1;
}

.product-card__title-link {
    color: #333;
    text-decoration: none;
    transition: color 0.3s ease;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.product-card__title-link:hover {
    color: #ff6b6b;
}

/* Rating */
.product-card__rating {
    display: flex;
    align-items: center;
    gap: 6px;
    margin: 4px 0;
}

.rating-stars {
    display: flex;
    gap: 2px;
}

.star {
    color: #ddd;
    font-size: 14px;
    transition: color 0.3s ease;
}

.star.filled {
    color: #ffc107;
}

.rating-count {
    color: #666;
    font-size: 12px;
}

/* Price */
.product-card__price {
    display: flex;
    align-items: center;
    gap: 8px;
    margin: 8px 0;
}

.price-current {
    color: #ff6b6b;
    font-weight: 700;
    font-size: 16px;
}

.price-original {
    color: #999;
    text-decoration: line-through;
    font-size: 14px;
}

/* Variants */
.product-card__variants {
    display: flex;
    align-items: center;
    gap: 6px;
    margin: 8px 0;
    flex-wrap: wrap;
}

.variant-option {
    border: 1px solid #ddd;
    background: white;
    padding: 4px 8px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 11px;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 4px;
}

.variant-option:hover {
    border-color: #ff6b6b;
}

.variant-option.active {
    border-color: #ff6b6b;
    background: #ff6b6b;
    color: white;
}

.variant-option:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.variant-color {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 1px solid #ddd;
}

.variants-more {
    color: #666;
    font-size: 11px;
    font-weight: 500;
}

/* Actions */
.product-card__actions {
    margin-top: auto;
    padding-top: 12px;
}

.btn {
    width: 100%;
    padding: 10px 16px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 13px;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    transition: all 0.3s ease;
    text-decoration: none;
}

.btn-primary {
    background: linear-gradient(45deg, #ff6b6b, #ff8e53);
    color: white;
    box-shadow: 0 2px 8px rgba(255, 107, 107, 0.3);
}

.btn-primary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(255, 107, 107, 0.4);
}

.btn-disabled {
    background: #e0e0e0;
    color: #999;
    cursor: not-allowed;
}

/* Loading state */
.add-to-cart-btn.loading {
    pointer-events: none;
    opacity: 0.7;
}

.add-to-cart-btn.loading::after {
    content: '';
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-left: 8px;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

/* Responsive */
@media (max-width: 768px) {
    .product-card {
        max-width: 100%;
    }
    
    .product-card__content {
        padding: 12px;
    }
    
    .product-card__title {
        font-size: 13px;
    }
    
    .price-current {
        font-size: 15px;
    }
    
    .btn {
        padding: 8px 12px;
        font-size: 12px;
    }
}

/* Lazy loading */
.lazy {
    opacity: 0;
    transition: opacity 0.3s;
}

.lazy.loaded {
    opacity: 1;
}
</style>

<script>
// Add to cart functionality
function addToCart(productId) {
    const button = document.querySelector(`[data-product-id="${productId}"]`);
    
    if (button.classList.contains('loading')) {
        return;
    }
    
    button.classList.add('loading');
    
    // Simulate API call
    fetch('/api/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content')
        },
        body: JSON.stringify({
            product_id: productId,
            quantity: 1
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Update cart count
            updateCartCount(data.cart_count);
            
            // Show success message
            showNotification('تم إضافة المنتج للسلة بنجاح', 'success');
            
            // Update button text temporarily
            const originalText = button.innerHTML;
            button.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><polyline points="20,6 9,17 4,12"></polyline></svg> تم الإضافة';
            
            setTimeout(() => {
                button.innerHTML = originalText;
            }, 2000);
        } else {
            showNotification(data.message || 'حدث خطأ أثناء إضافة المنتج', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('حدث خطأ أثناء إضافة المنتج', 'error');
    })
    .finally(() => {
        button.classList.remove('loading');
    });
}

// Toggle wishlist
function toggleWishlist(productId) {
    const button = document.querySelector(`.product-card[data-product-id="${productId}"] .product-card__wishlist`);
    const isActive = button.classList.contains('active');
    
    fetch('/api/wishlist/toggle', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content')
        },
        body: JSON.stringify({
            product_id: productId
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            button.classList.toggle('active');
            const message = isActive ? 'تم إزالة المنتج من المفضلة' : 'تم إضافة المنتج للمفضلة';
            showNotification(message, 'success');
        } else {
            showNotification(data.message || 'حدث خطأ', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('حدث خطأ', 'error');
    });
}

// Select variant
function selectVariant(productId, variantId) {
    const productCard = document.querySelector(`.product-card[data-product-id="${productId}"]`);
    const variants = productCard.querySelectorAll('.variant-option');
    
    variants.forEach(variant => variant.classList.remove('active'));
    event.target.classList.add('active');
    
    // Update product data
    fetch(`/api/products/${productId}/variants/${variantId}`)
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Update price
            const priceElement = productCard.querySelector('.price-current');
            if (priceElement) {
                priceElement.textContent = `${data.variant.price} ر.س`;
            }
            
            // Update image if variant has different image
            if (data.variant.image) {
                const imageElement = productCard.querySelector('.product-card__image');
                if (imageElement) {
                    imageElement.src = data.variant.image.url;
                }
            }
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

// Quick view
function openQuickView(productId) {
    // Placeholder for quick view modal
    showNotification('سيتم تطوير العرض السريع قريباً', 'info');
}

// Utility functions
function updateCartCount(count) {
    const cartCountElement = document.getElementById('cart-count');
    if (cartCountElement) {
        cartCountElement.textContent = count;
    }
}

function showNotification(message, type = 'info') {
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `notification notification--${type}`;
    notification.textContent = message;
    
    // Add styles
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'};
        color: white;
        padding: 12px 20px;
        border-radius: 6px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 10000;
        font-size: 14px;
        font-weight: 500;
        transform: translateX(100%);
        transition: transform 0.3s ease;
    `;
    
    document.body.appendChild(notification);
    
    // Animate in
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Remove after 3 seconds
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}
</script>

